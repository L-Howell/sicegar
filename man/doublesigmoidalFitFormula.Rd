% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doublesigmoidalFitFunctions.R
\name{doublesigmoidalFitFormula}
\alias{doublesigmoidalFitFormula}
\title{doublesigmoidalFitFormula}
\usage{
doublesigmoidalFitFormula(x, finalAsymptoteIntensity, maximum, slope1,
  midPoint1, slope2, midPointDistance)
}
\arguments{
\item{x}{is the "time" (time) column of the dataframe}

\item{finalAsymptoteIntensity}{represents the intensity value at time is infinite.}

\item{maximum}{is the maximum value that the sigmoidal function can reach}

\item{slope1}{is the slope of the sigmoidal function at the steppest point in the exponential phase of the viral production. i.e when the signal intensity is increasing}

\item{midPoint1}{is the x axis value of the steppest point in the function}

\item{slope2}{is the slope of the sigmoidal function at the steppest point in the lysis phase of the viral production. i.e when the signal intensity is decreasing}

\item{midPointDistance}{is the distance between the time of steppest increase and steppest decrease in the intensity data. In other words the distance between the x axis values of arguments of slope1 and slope2}
}
\value{
the function returns the predicted intensities for given time points with given the double-sigmoidal fit parameters for double sigmoidal fit
}
\description{
The aim of the function is to calculate intesities for given time points (x) by using double-sigmoidal fit model & parameters (maximum, final asymptote intensity, slope1, midpoint1, slope2 and mid point distance)
}
\examples{
# Related example

# Initial Command to Reset the System
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\\014")

time=seq(3,24,0.1)

#intensity with Noise
noise_parameter=0.2
intensity_noise=runif(n = length(time),min = 0,max = 1)*noise_parameter
intensity=doublesigmoidalFitFormula(time,
                                   finalAsymptoteIntensity=.3,
                                   maximum=4,
                                   slope1=1,
                                   midPoint1=7,
                                   slope2=1,
                                   midPointDistance=8)
intensity=intensity+intensity_noise

dataInput=data.frame(intensity=intensity,time=time)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
parameterVector<-doublesigmoidalFitFunction(dataInput2,tryCounter=2)


#Check the results
if(parameterVector$isThisaFit){
 intensityTheoretical=
       doublesigmoidalFitFormula(
               time,
               finalAsymptoteIntensity=parameterVector$finalAsymptoteIntensity_Estimate,
               maximum=parameterVector$maximum_Estimate,
               slope1=parameterVector$slope1_Estimate,
               midPoint1=parameterVector$midPoint1_Estimate,
               slope2=parameterVector$slope2_Estimate,
               midPointDistance=parameterVector$midPointDistance_Estimate)

 comparisonData=cbind(dataInput,intensityTheoretical)
 require(ggplot2)
 ggplot(comparisonData)+
   geom_point(aes(x=time, y=intensity))+
   geom_line(aes(x=time,y=intensityTheoretical))+
   expand_limits(x = 0, y = 0)}

if(!parameterVector$isThisaFit){print(parameterVector)}


}

